waits :


	Static 	-----> Thread.sleep(); --> Java

	Dynamic  

		implicit

		explicit

		fluent

		pageLoadTimeout

		
Implicit Wait :

        For global level(for full web driver)

	it is applicable for all elements but we use findElement() and findElements()

	if driver will find out the Element within given secs

					it will ignore rest of the seconds

	if driver doesn't find out the Element within given secs

					it will throw NoSuchElementException at run-time



Syntax 1 :

Selenium 3 :

	driver.manage().timeouts().implicitlyWait(10,TimeUnit.Seconds);


Syntax 2 :

Selenium 4 :

	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));

	




Explicit Wait :

                For particular element

		it is applicable for single webelement

		and depends on Condition and Duration


if the condition is true within given duration 

				it will ignore rest of sec and working fine

if the condition is false 

		it will throw Exceptions depends on given condition

Syntax :

	( c ) 
WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

wait.until(ExpectedConditions.alertIsPresent());


Fluent Wait :

           Can customize intervals and exceptions


Syntax: 



	Wait<WebDriver> w = new FluentWait<WebDriver>(driver).withTimeout(Duration.ofSeconds(30))
		.pollingEvery(Duration.ofSeconds(5)).ignoring(NoSuchElementException.class);







Page load timeout :

                Will set a maximum time to the page

		Default loading time for get() is 300 ms
		
	Syntax:
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(10));

		pageloadtimeout impact in get()

		if page is loaded within given sec ---> fine

		if page is not loaded within given sec ---> throw TimeOutException at Run-Time.











Implicit Wait
	                                                                      					Explicit Wait
Implicit Wait time is applied to all the elements in the script
													Explicit Wait time is applied only to those elements which are intended by us
In Implicit Wait, we need not specify “ExpectedConditions” on the element to be located
													In Explicit Wait, we need to specify “ExpectedConditions” on the element to be located
It is recommended to use when the elements are located with the time 
frame specified in Selenium implicit wait
													It is recommended to use when the elements are taking long time to load and also for           														verifying the property of the element like(visibilityOfElementLocated, 																elementToBeClickable,elementToBeSelected)

Conclusion:

Implicit, Explicit and Fluent Wait are the different waits used in Selenium. 
Usage of these waits are totally based on the elements which are loaded at different intervals of time. 
It is always not recommended to use Thread.Sleep() while Testing our application or building our framework.



























